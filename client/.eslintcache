[{"E:\\WEBTASK\\DEVMEDIA\\client\\src\\index.js":"1","E:\\WEBTASK\\DEVMEDIA\\client\\src\\App.js":"2","E:\\WEBTASK\\DEVMEDIA\\client\\src\\reportWebVitals.js":"3","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\layouts\\Landing.js":"4","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\layouts\\Navbar.js":"5","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\Auth\\Login.js":"6","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\Auth\\Register.js":"7","E:\\WEBTASK\\DEVMEDIA\\client\\src\\store.js":"8","E:\\WEBTASK\\DEVMEDIA\\client\\src\\reducers\\index.js":"9","E:\\WEBTASK\\DEVMEDIA\\client\\src\\reducers\\alert.js":"10","E:\\WEBTASK\\DEVMEDIA\\client\\src\\actions\\types.js":"11","E:\\WEBTASK\\DEVMEDIA\\client\\src\\actions\\alert.js":"12","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\layouts\\Alert.js":"13","E:\\WEBTASK\\DEVMEDIA\\client\\src\\actions\\auth.js":"14","E:\\WEBTASK\\DEVMEDIA\\client\\src\\reducers\\auth.js":"15","E:\\WEBTASK\\DEVMEDIA\\client\\src\\utils\\setAuthToken.js":"16","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\dashboard\\Dashboard.js":"17","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\routing\\PrivateRoute.js":"18","E:\\WEBTASK\\DEVMEDIA\\client\\src\\reducers\\profile.js":"19","E:\\WEBTASK\\DEVMEDIA\\client\\src\\actions\\profile.js":"20","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\layouts\\spinner.js":"21","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profile\\CreateProfile.js":"22","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\dashboard\\DashboardAction.js":"23","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profile\\EditProfile.js":"24","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profile\\AddExperience.js":"25","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profile\\AddEducation.js":"26","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\dashboard\\Experience.js":"27","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\dashboard\\Education.js":"28","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profiles\\profiles.js":"29","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profiles\\profilesitem.js":"30","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profileview\\Profileview.js":"31","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profileview\\ProfileTop.js":"32","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profileview\\ProfileAbout.js":"33","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profileview\\ProfileExperience.js":"34","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profileview\\ProfileEducation.js":"35","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profileview\\ProfileGithub.js":"36","E:\\WEBTASK\\DEVMEDIA\\client\\src\\reducers\\post.js":"37","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\posts\\Post.js":"38","E:\\WEBTASK\\DEVMEDIA\\client\\src\\actions\\post.js":"39","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\posts\\PostItem.js":"40","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\posts\\PostForm.js":"41","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\Post\\Post.js":"42","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\Post\\CommentForm.js":"43","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\Post\\CommentItem.js":"44","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\routing\\Routes.js":"45","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\layouts\\notfound.js":"46","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\layouts\\NotFound.js":"47"},{"size":478,"mtime":1608120053343,"results":"48","hashOfConfig":"49"},{"size":931,"mtime":1608625499418,"results":"50","hashOfConfig":"49"},{"size":362,"mtime":499162500000,"results":"51","hashOfConfig":"49"},{"size":1153,"mtime":1608215875327,"results":"52","hashOfConfig":"49"},{"size":1614,"mtime":1608622724767,"results":"53","hashOfConfig":"49"},{"size":2015,"mtime":1608212555712,"results":"54","hashOfConfig":"49"},{"size":2866,"mtime":1608212549336,"results":"55","hashOfConfig":"49"},{"size":397,"mtime":1608200392698,"results":"56","hashOfConfig":"49"},{"size":229,"mtime":1608550413883,"results":"57","hashOfConfig":"49"},{"size":398,"mtime":1608201624895,"results":"58","hashOfConfig":"49"},{"size":1041,"mtime":1608618645518,"results":"59","hashOfConfig":"49"},{"size":334,"mtime":1608204155906,"results":"60","hashOfConfig":"49"},{"size":507,"mtime":1608203824442,"results":"61","hashOfConfig":"49"},{"size":2007,"mtime":1608273290227,"results":"62","hashOfConfig":"49"},{"size":1113,"mtime":1608301861559,"results":"63","hashOfConfig":"49"},{"size":252,"mtime":1608209132226,"results":"64","hashOfConfig":"49"},{"size":1990,"mtime":1608301196627,"results":"65","hashOfConfig":"49"},{"size":662,"mtime":1608213310150,"results":"66","hashOfConfig":"49"},{"size":1055,"mtime":1608549308409,"results":"67","hashOfConfig":"49"},{"size":5953,"mtime":1608549743927,"results":"68","hashOfConfig":"49"},{"size":298,"mtime":1608301704093,"results":"69","hashOfConfig":"49"},{"size":7039,"mtime":1608289907014,"results":"70","hashOfConfig":"49"},{"size":626,"mtime":1608287660854,"results":"71","hashOfConfig":"49"},{"size":8422,"mtime":1608301259430,"results":"72","hashOfConfig":"49"},{"size":3561,"mtime":1608301732944,"results":"73","hashOfConfig":"49"},{"size":3611,"mtime":1608301512163,"results":"74","hashOfConfig":"49"},{"size":1453,"mtime":1608297549956,"results":"75","hashOfConfig":"49"},{"size":1551,"mtime":1608297753282,"results":"76","hashOfConfig":"49"},{"size":1371,"mtime":1608301178722,"results":"77","hashOfConfig":"49"},{"size":1023,"mtime":1608301067613,"results":"78","hashOfConfig":"49"},{"size":3017,"mtime":1608539789879,"results":"79","hashOfConfig":"49"},{"size":2190,"mtime":1608536844447,"results":"80","hashOfConfig":"49"},{"size":828,"mtime":1608537610446,"results":"81","hashOfConfig":"49"},{"size":686,"mtime":1608538851353,"results":"82","hashOfConfig":"49"},{"size":766,"mtime":1608539472930,"results":"83","hashOfConfig":"49"},{"size":1724,"mtime":1608550012556,"results":"84","hashOfConfig":"49"},{"size":1695,"mtime":1608619306478,"results":"85","hashOfConfig":"49"},{"size":1117,"mtime":1608558156425,"results":"86","hashOfConfig":"49"},{"size":3662,"mtime":1608618941540,"results":"87","hashOfConfig":"49"},{"size":2434,"mtime":1608562634160,"results":"88","hashOfConfig":"49"},{"size":1070,"mtime":1608558193105,"results":"89","hashOfConfig":"49"},{"size":1225,"mtime":1608621697586,"results":"90","hashOfConfig":"49"},{"size":1060,"mtime":1608619713497,"results":"91","hashOfConfig":"49"},{"size":1359,"mtime":1608621747509,"results":"92","hashOfConfig":"49"},{"size":1712,"mtime":1608626818293,"results":"93","hashOfConfig":"49"},{"size":388,"mtime":1608626854364,"results":"94","hashOfConfig":"49"},{"size":388,"mtime":1608626854364,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"10eqs3u",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"98"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\WEBTASK\\DEVMEDIA\\client\\src\\index.js",[],["203","204"],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\App.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\reportWebVitals.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\layouts\\Landing.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\layouts\\Navbar.js",["205"],"import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers </Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/posts'>Posts</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/dashboard'>\r\n          <i className='fas fa-user' />{' '}\r\n          <span className='hide-sm'>Dashboard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout}>\r\n          <i className='fas fa-sign-out-alt' />{' '}\r\n          <span className='hide-sm'>Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLlinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/register'>Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/login'>Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className='navbar bg-dark'>\r\n      <h1>\r\n        <Link to='/'>\r\n          <i className='fas fa-code'></i> DevConnector\r\n        </Link>\r\n      </h1>\r\n      {!loading && (\r\n        <Fragment>{isAuthenticated ? authLinks : guestLlinks}</Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.protoTypes = {\r\n  logout: propTypes.func.isRequired,\r\n  auth: propTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\Auth\\Login.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\Auth\\Register.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\store.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\reducers\\index.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\reducers\\alert.js",["206","207"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst intitialState = [];\r\n\r\nexport default function (state = intitialState, action) {\r\n  const { type, payload } = action;\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\WEBTASK\\DEVMEDIA\\client\\src\\actions\\types.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\actions\\alert.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\layouts\\Alert.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\actions\\auth.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\reducers\\auth.js",["208"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  DELETE_PROFILE,\r\n} from '../actions/types';\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case DELETE_PROFILE:\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\WEBTASK\\DEVMEDIA\\client\\src\\utils\\setAuthToken.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\dashboard\\Dashboard.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\routing\\PrivateRoute.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\reducers\\profile.js",["209"],"import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n} from '../actions/types';\r\n\r\nconst intitalState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = intitalState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case UPDATE_PROFILE:\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false,\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\WEBTASK\\DEVMEDIA\\client\\src\\actions\\profile.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\layouts\\spinner.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profile\\CreateProfile.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\dashboard\\DashboardAction.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profile\\EditProfile.js",["210"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport propTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      twitter:\r\n        loading || !profile.socialMedia ? '' : profile.socialMedia.twitter,\r\n      facebook:\r\n        loading || !profile.socialMedia ? '' : profile.socialMedia.facebook,\r\n      linkedin:\r\n        loading || !profile.socialMedia ? '' : profile.socialMedia.linkedin,\r\n      youtube:\r\n        loading || !profile.socialMedia ? '' : profile.socialMedia.youtube,\r\n      instagram:\r\n        loading || !profile.socialMedia ? '' : profile.socialMedia.instagram,\r\n    });\r\n  }, [loading, getCurrentProfile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: propTypes.func.isRequired,\r\n  getCurrentProfile: propTypes.func.isRequired,\r\n  profile: propTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profile\\AddExperience.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profile\\AddEducation.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\dashboard\\Experience.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\dashboard\\Education.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profiles\\profiles.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profiles\\profilesitem.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profileview\\Profileview.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profileview\\ProfileTop.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profileview\\ProfileAbout.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profileview\\ProfileExperience.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profileview\\ProfileEducation.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\profileview\\ProfileGithub.js",["211"],"import React, { useEffect } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getRepos } from '../../actions/profile';\r\nimport Spinner from '../layouts/spinner';\r\n\r\nconst ProfileGithub = ({ username, getRepos, repos }) => {\r\n  useEffect(() => {\r\n    getRepos(username);\r\n  }, [getRepos]);\r\n  return (\r\n    <div className='profile-github'>\r\n      <h2 className='text-primary my-1'>GitHub Repos</h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map((repo) => (\r\n          <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n            <div>\r\n              <ul>\r\n                <li className='badge badge-primary'>\r\n                  Stars: {repo.stargazers_count}\r\n                </li>\r\n\r\n                <li className='badge badge-dark'>\r\n                  Watcher: {repo.watchers_count}\r\n                </li>\r\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getRepos: propTypes.func.isRequired,\r\n  repos: propTypes.array.isRequired,\r\n  username: propTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getRepos })(ProfileGithub);\r\n","E:\\WEBTASK\\DEVMEDIA\\client\\src\\reducers\\post.js",["212"],"import {\r\n  ADD_COMMENT,\r\n  ADD_POST,\r\n  DELETE_POST,\r\n  GET_POST,\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  REMOVE_COMMENT,\r\n  UPDATE_LIKE,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case UPDATE_LIKE:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false,\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== payload),\r\n        loading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false,\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false,\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment._id !== payload\r\n          ),\r\n        },\r\n        loading: false,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\posts\\Post.js",["213"],"import React, { Fragment, useEffect } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getPosts } from '../../actions/post';\r\nimport Spinner from '../layouts/spinner';\r\nimport post from '../../reducers/post';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\n\r\nconst Post = ({ getPosts, post: { posts, loading } }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return loading ? (\r\n    <Spinner></Spinner>\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Posts</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'>Welcome to the community</i>\r\n      </p>\r\n      <PostForm />\r\n      <div className='posts'>\r\n        {posts.map((post) => (\r\n          <PostItem key={post._id} post={post}></PostItem>\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPosts: propTypes.func.isRequired,\r\n  post: propTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Post);\r\n","E:\\WEBTASK\\DEVMEDIA\\client\\src\\actions\\post.js",["214"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  ADD_POST,\r\n  DELETE_POST,\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKE,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from './types';\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/posts');\r\n\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/posts/' + id);\r\n\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/likes/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKE,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    console.log(err.response.statusText);\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKE,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id,\r\n    });\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(`/api/posts`, formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Post Added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/posts/comment/${postId}`,\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Comment Added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId,\r\n    });\r\n    dispatch(setAlert('Comment Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\posts\\PostItem.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\posts\\PostForm.js",["215"],"import React, { useState } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\nimport { setAlert } from '../../actions/alert';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState('');\r\n  return (\r\n    <div class='post-form'>\r\n      <div class='bg-primary p'>\r\n        <h3>Say Something...</h3>\r\n      </div>\r\n      <form\r\n        class='form my-1'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addPost({ text });\r\n          setText('');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Create a post'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input type='submit' class='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: propTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\Post\\Post.js",["216"],"import React, { useEffect, Fragment } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layouts/spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport { Link } from 'react-router-dom';\r\nimport { getPost } from '../../actions/post';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost]);\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to='/posts' className='btn'>\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className='comments'>\r\n        {post.comments.map((comment) => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: propTypes.func.isRequired,\r\n  post: propTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\Post\\CommentForm.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\Post\\CommentItem.js",["217"],"import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport propTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteComment } from '../../actions/post';\r\nimport Moment from 'react-moment';\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment,\r\n}) => (\r\n  <div class='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img class='round-img' src={avatar} alt='' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p class='my-1'>{text}</p>\r\n      <p class='post-date'>\r\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n      </p>\r\n      {!auth.loading && user === auth.user._id && (\r\n        <button\r\n          onClick={(e) => deleteComment(postId, _id)}\r\n          type='button'\r\n          className='btn btn-danger'\r\n        >\r\n          <i className='fas fa-times'></i>\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCommentItem.propTypes = {\r\n  postId: propTypes.string.isRequired,\r\n  comment: propTypes.object.isRequired,\r\n  auth: propTypes.object.isRequired,\r\n  deleteComment: propTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\routing\\Routes.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\layouts\\notfound.js",[],"E:\\WEBTASK\\DEVMEDIA\\client\\src\\components\\layouts\\NotFound.js",[],{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":23,"column":9,"nodeType":"224","endLine":23,"endColumn":29},{"ruleId":"225","severity":1,"message":"226","line":5,"column":1,"nodeType":"227","endLine":15,"endColumn":2},{"ruleId":"228","severity":1,"message":"229","line":6,"column":11,"nodeType":"230","messageId":"231","endLine":6,"endColumn":15},{"ruleId":"225","severity":1,"message":"226","line":17,"column":1,"nodeType":"227","endLine":51,"endColumn":2},{"ruleId":"225","severity":1,"message":"226","line":18,"column":1,"nodeType":"227","endLine":57,"endColumn":2},{"ruleId":"232","severity":1,"message":"233","line":53,"column":6,"nodeType":"234","endLine":53,"endColumn":34,"suggestions":"235"},{"ruleId":"232","severity":1,"message":"236","line":10,"column":6,"nodeType":"234","endLine":10,"endColumn":16,"suggestions":"237"},{"ruleId":"225","severity":1,"message":"226","line":19,"column":1,"nodeType":"227","endLine":81,"endColumn":2},{"ruleId":"228","severity":1,"message":"238","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":12},{"ruleId":"228","severity":1,"message":"239","line":146,"column":11,"nodeType":"230","messageId":"231","endLine":146,"endColumn":14},{"ruleId":"228","severity":1,"message":"240","line":5,"column":10,"nodeType":"230","messageId":"231","endLine":5,"endColumn":18},{"ruleId":"232","severity":1,"message":"241","line":14,"column":6,"nodeType":"234","endLine":14,"endColumn":15,"suggestions":"242"},{"ruleId":"228","severity":1,"message":"243","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'type' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.socialMedia', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["246"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["247"],"'post' is defined but never used.","'res' is assigned a value but never used.","'setAlert' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["248"],"'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.socialMedia]",{"range":"255","text":"256"},"Update the dependencies array to be: [getRepos, username]",{"range":"257","text":"258"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"259","text":"260"},[1795,1823],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.socialMedia]",[327,337],"[getRepos, username]",[513,522],"[getPost, match.params.id]"]